services:
    elasticsearch1:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
        container_name: elasticsearch1
        environment:
            - node.name=elasticsearch1
            - cluster.name=es-cluster
            - discovery.seed_hosts=elasticsearch2
            - cluster.initial_master_nodes=elasticsearch1,elasticsearch2
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - xpack.security.enabled=false
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - es_data1:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
        networks:
            - elastic
    
    elasticsearch2:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
        container_name: elasticsearch2
        environment:
            - node.name=elasticsearch2
            - cluster.name=es-cluster
            - discovery.seed_hosts=elasticsearch1
            - cluster.initial_master_nodes=elasticsearch1,elasticsearch2
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - xpack.security.enabled=false
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - es_data2:/usr/share/elasticsearch/data
        ports:
            - "9201:9200"
        networks:
            - elastic
        
    dlogstash:
        image: docker.elastic.co/logstash/logstash:8.15.2
        container_name: dlogstash
        environment:
            LS_JAVA_OPTS: "-Xms256m -Xmx256m"
        volumes:
            - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
        depends_on:
            - elasticsearch1
            - elasticsearch2
        ports:
            - "5001:5000"
        networks:
            - elastic
    
    dkibana:
        image: docker.elastic.co/kibana/kibana:8.15.2
        container_name: dkibana
        environment:
            SERVER_NAME: kibana.test
            ELASTICSEARCH_HOSTS: '["http://elasticsearch1:9200","http://elasticsearch2:9200"]'
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch1
            - elasticsearch2
        networks:
            - elastic

volumes:
  es_data1:
    driver: local
  es_data2:
    driver: local

networks:
    elastic:
       driver: bridge
       